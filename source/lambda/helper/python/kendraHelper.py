import boto3
from botocore.exceptions import ClientError
import json
import os
from helper import S3Helper


class KendraHelper:
    

    #
    #   This function instruct Kendra to index a pdf document in s3
    #
    #   region:                 region of Kendra index
    #   s3bucket:               bucket name where document to index exists
    #   s3key:                  key of the document to index
    #   documentId:             the document id generated by DUS
    #   kendraIndexId:          Kendra index id
    #   kendraRoleArn:          a role that Kendra can assume to read the s3 bucket
    def indexDocument(self,
                      region,
                      kendraIndexId,
                      kendraRoleArn,
                      s3bucket,
                      s3key,
                      documentId):
        
        
        kendraclient = client = boto3.client('kendra', region_name=region)
        
        response = client.batch_put_document(IndexId=kendraIndexId,
                                             RoleArn=kendraRoleArn,
                                             Documents=[
                                                {
                                                'Id': documentId,
                                                'S3Path': {
                                                    'Bucket': s3bucket,
                                                    'Key': s3key
                                                        },
                                                'AccessControlList': [
                                                          {
                                                          'Name': 'everybody',
                                                          'Type': 'GROUP',
                                                          'Access': 'ALLOW'
                                                          }
                                                ],
                                                'ContentType': 'PDF'}])
        
        
        return

    #
    #   This function instruct Kendra to remove a pdf document from its index
    #
    #   region:                 region of Kendra index
    #   kendraIndexId:          Kendra index id
    #   kendraRoleArn:          a role that Kendra can assume to read the s3 bucket
    #   documentId:             the document id generated by DUS
    def deindexDocument(self,
                        region,
                        kendraIndexId,
                        documentId):
        
        kendraclient = client = boto3.client('kendra', region_name=region)

        response = client.batch_delete_document(IndexId=kendraIndexId,
                                                DocumentIdList=[documentId])
                                                
        return


    #
    #   This function seaches Kendra using a natural language query string and a
    #   user membership tag (healthprovider, scientist, generalpublic)
    #
    #   region:                 region of Kendra index
    #   kendraIndexId:          Kendra index id
    #   request:                POST body of json search
    def search(self,
               region,
               kendraIndexId,
               request):

        #import pdb
        #pdb.set_trace()
        
        search = json.loads(request)

        client = client = boto3.client('kendra', region_name=region)

        if 'tag' in search and search['tag'] != None:
            response = client.query(
                QueryText=search['query'],
                IndexId=kendraIndexId,
                AttributeFilter={
                    "OrAllFilters": [
                        {
                            "EqualsTo": {
                            "Key": "_group_ids",
                            "Value": {
                                "StringListValue": [search['tag']]
                                }
                            }
                        }
                    ]
                },
                PageNumber=search['pageNumber'],
                PageSize=search['pageSize']
            )

        else:
            response = client.query(
                QueryText=search['query'],
                IndexId=kendraIndexId,
                PageNumber=search['pageNumber'],
                PageSize=search['pageSize']
            )

        return response

